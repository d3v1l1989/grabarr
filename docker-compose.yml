version: '3.8'

services:
  api:
    container_name: grabarr-api
    image: ghcr.io/d3v1l1989/grabarr-api:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8765:8765"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:6543/grabarr
      - REDIS_URL=redis://redis:7369/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./api:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8765 --reload

  postgres:
    container_name: grabarr-postgres
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=grabarr
    ports:
      - "6543:6543"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: grabarr-redis
    image: redis:alpine
    ports:
      - "7369:7369"
    volumes:
      - redis_data:/data

  frontend:
    container_name: grabarr-frontend
    image: ghcr.io/d3v1l1989/grabarr-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3456:3456"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8765
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data: 